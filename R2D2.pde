import ddf.minim.*;

Minim minim;
AudioPlayer player;

float DefaultScale = 0.3;
float FR = 29;
float SampleRate = 20;

boolean running = true;
boolean DEBUGGING = false;
boolean SoundOn = true;

float t = 0;
float scale = DefaultScale;
color transparent = color(0, 0, 0, 0);
color blue = color(32, 64, 123);
color black = color(32, 29, 28);
color SecondEye = color(75, 70, 65);
color red = color(239, 67, 90);
color grey = color(207, 207, 205);
color darkgrey = color(137, 132, 124);
color FootWhite = color(190, 191, 189);
color silver = color(171, 169, 164);
color white = color(255, 255, 255);
ArrayList<PVector> points = new ArrayList<PVector>();
ArrayList<Integer> lineColor = new ArrayList<Integer>();
ArrayList<Integer> strokes = new ArrayList<Integer>();

void setup()
{
  fullScreen(P2D);
  //size(800, 800, P2D);
  background(0);
  noFill();
  smooth();
  frameRate(FR);
  
  minim = new Minim(this);
  player = minim.loadFile("StarWars Theme.mp3");
  if(SoundOn)
    player.loop();
}

void keyPressed() {
  if(key == ' ')
    running = !running;
  if(key == 'r')
    reset();
}

void reset()
{
  frameCount = -1;
  t = 0;
  lineColor.clear();
  strokes.clear();
  points.clear();
  minim.stop();
  minim = new Minim(this);
  if(SoundOn)
    player.loop();
  scale = DefaultScale;
}

float updateT(float T)
{
  T += 0.0008;
  
  if(T >= 191.416) { //END
    strokes.add(3);
    lineColor.add(color(0, 0, 0));
    return 64 * PI;
  }
  if(T >= 188.510 && T < 191.416) { //UNDER DOME
    strokes.add(3);
    lineColor.add(silver);
    return T + 0.02;
  }
  if(T >= 178.901 && T < 188.510) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 188.510;
  }
  if(T >= 176.056 && T < 178.901) { //UNDERCARRIAGE DIAGONAL LINE
    strokes.add(2);
    lineColor.add(darkgrey);
    return T + 0.007;
  }
  if(T >= 166.352 && T < 176.056) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 176.056;
  }
  if(T >= 163.379 && T < 166.352) { //LEFT FACE
    strokes.add(2);
    lineColor.add(blue);
    return T + 0.005;
  }
  if(T >= 153.809 && T < 163.379) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 163.379;
  }
  if(T >= 150.811 && T < 153.809) { //UNDERCARRIAGE V
    strokes.add(2);
    lineColor.add(darkgrey);
    return T + 0.006;
  }
  if(T >= 142.067 && T < 150.811) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 150.811;
  }
  if(T >= 138.309 && T < 142.067) { //LEFT FACE
    strokes.add(2);
    lineColor.add(grey);
    return T + 0.002;
  }
  if(T >= 128.531 && T < 138.309) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 138.309;
  }
  if(T >= 125.478 && T < 128.531) { //FOOT AND UNDERCARRIAGE
    strokes.add(3);
    lineColor.add(FootWhite);
    return T + 0.002;
  }
  if(T >= 115.758 && T < 125.478) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 125.478;
  }
  if(T >= 113.115 && T < 115.758) { //UNDERCARRIGE V
    strokes.add(2);
    lineColor.add(darkgrey);
    return T + 0.004;
  }
  if(T >= 103.736 && T < 113.115) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 113.115;
  }
  if(T >= 100.538 && T < 103.736) { //CENTER FOOT
    strokes.add(3);
    lineColor.add(FootWhite);
    return T + 0.003;
  }
  if(T >= 91.153 && T < 100.538) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 100.538;
  }
  if(T >= 87.973 && T < 91.153) { //BODY
    strokes.add(2);
    if(T < 90.715)
      lineColor.add(darkgrey);
    else
      lineColor.add(grey);
    return T + 0.002;
  }
  if(T >= 78.706 && T < 87.973) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 87.973;
  }
  if(T >= 75.407 && T < 78.706) { //FOOT AND BODY
    strokes.add(2);
    if(T < 76.522)
      lineColor.add(grey);
    else
      lineColor.add(darkgrey);
    return T + 0.002;
  }
  if(T >= 68.9287 && T < 75.407) { //SKIP
    strokes.add(1);
    lineColor.add(black);
    return 75.407;
  }
  if(T >= 67.977 && T < 68.928) { //EYE 2
    strokes.add(2);
    if(T > 68.098 && T < 68.690)
      T = 68.690;
    if(T > 68.918)
      lineColor.add(white);
    else if(T < 68.085 && T >= 67.977)
      lineColor.add(blue);
    else
      lineColor.add(black);
    return T + 0.0008;
  }
  if(T >= 66.087 && T < 67.977) { //SKIP
    strokes.add(1);
    lineColor.add(black);
    return 67.977;
  }
  if(T >= 62.844 && T < 66.087) { //EYE 1
    strokes.add(2);
    if(T >= 65.747)
      lineColor.add(silver);
    else if(T < 63.546 && T >= 62.844)
      lineColor.add(black);
    else
      lineColor.add(blue);
    return T + 0.0016;
  }
  if(T >= 53.415 && T < 62.844) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 62.844;
  }
  if(T >= 50.311 && T < 53.415) { //RIGHT FOOT
    strokes.add(3);
    if(T < 53.415 && T >= 52.924)
      lineColor.add(grey);
    else
      lineColor.add(FootWhite);
    return T + 0.0016;
  }
  if(T >= 40.763 && T < 50.311) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 50.311;
  }
  if(T >= 37.720 && T < 40.763) { //CHEST 1
    strokes.add(2);
    if(T > 40.345)
      lineColor.add(blue);
    else
      lineColor.add(white);
    return T + 0.002;
  }
  if(T >= 28.318 && T < 37.720) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 37.720;
  }
  if(T >= 25.139 && T < 28.318) { //BODY 2
    strokes.add(3);
    if(T > 28.116)
      lineColor.add(blue);
    else if(T < 28.089 && T >= 27.974)
      lineColor.add(SecondEye);
    else if(T < 27.974 && T >= 27.887)
      lineColor.add(silver);
    else if(T < 27.887 && T >= 27.747)
      lineColor.add(SecondEye);
    else if(T < 27.363 && T >= 25.627)
      lineColor.add(grey);
    else if(T < 25.627 && T >= 25.139)
      lineColor.add(blue);
    else
      lineColor.add(silver);
    return T + 0.0008;
  }
  if(T >= 15.780 && T < 25.139) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 25.139;
  }
  if(T >= 12.572 && T < 15.780) { //RIGHT BODY AND LEG
    strokes.add(3);
    if(T < 14.756 && T >= 14.529)
      lineColor.add(red);
    else if(T < 14.155 && T >= 13.532)
      lineColor.add(grey);
    else if(T < 13.532 && T >= 12.572)
      lineColor.add(darkgrey);
    else
      lineColor.add(silver);
    return T + 0.0004;
  }
  if(T >= 3.148 && T < 12.572) { //SKIP
    strokes.add(1);
    lineColor.add(white);
    return 12.572;
  }
  else { //BODY 1
    strokes.add(3);
    if(T < 2.990 && T >= 2.859)
      lineColor.add(blue);
    else if(T < 2.859 && T >= 2.541)
      lineColor.add(grey);
    else if(T < 2.541 && T >= 1.982)
      lineColor.add(darkgrey);
    else if(T < 1.982 && T >= 1.636)
      lineColor.add(FootWhite);
    else if(T < 1.636 && T >= 1.051)
      lineColor.add(darkgrey);
    else if(T < 1.051 && T >= 0.964)
      lineColor.add(blue);
    else if(T < 0.964 && T >= 0.796)
      lineColor.add(grey);
    else if(T < 0.796 && T >= 0.606)
      lineColor.add(blue);
    else if(T < 0.606 && T >= 0)
      lineColor.add(grey);
    else
      lineColor.add(silver);
  }
  
  return T;
}

void draw()
{ 
  if(frameCount < 30) return;
  if(t <= 64 * PI && running)
  {
    for(int z = 0; z<SampleRate; z++) {
      t = updateT(t);
      points.add(new PVector(x(t), -y(t)));
      if(DEBUGGING)
        print(t + "\n");
    }
  } else {
    if(!DEBUGGING)
      scale += 0.0004;
  }
  
  translate(width/2, height/2 + 50);
  background(0);
  
  beginShape();
  for(int i = 0; i < points.size(); i++)
  {
    if(points.get(i).x == 0 && points.get(i).y == 0) continue;
    strokeWeight(strokes.get(i));
    stroke(lineColor.get(i));
    point(points.get(i).x * scale, points.get(i).y * scale);
  }
  endShape();
}

float sgn(float x)
{
  if(x == 0) return 0;
  else if(x > 0) return 1;
  else return -1;
}

float theta(float x)
{
  if(x == 0) return 0.5;
  else if(x > 0) return 1;
  else return 0;
}

float SIN(float x)
{
  return sin(x);
}

float x(float t)
{
  return ((-17.0/42*sin(3.0/2 - 5*t) - 10.0/19*sin(67.0/48 - 4*t) - 55.0/27*sin(64.0/43 - 3*t) - 19.0/47*sin(41.0/37 - 2*t) - 727.0/30*sin(36.0/23 -t) - 8625.0/32)*theta(63*PI -t)*theta(t - 59*PI) + (-17.0/62*sin(17.0/11 - 11*t) - 17.0/52*sin(58.0/37 - 9*t) - 1.0/16*sin(36.0/25 - 6*t) - 47.0/53*sin(47.0/30 - 5*t) - 49.0/18*sin(36.0/23 - 3*t) - 881.0/37*sin(69.0/44 -t) + 12.0/49*sin(2*t + 26.0/17) + 1.0/29*sin(4*t + 25.0/21) + 13.0/31*sin(7*t + 146.0/31) + 1.0/85*sin(8*t + 45.0/38) + 3.0/28*sin(10*t + 71.0/46) + 3.0/37*sin(12*t + 25.0/16) + 2522.0/23)*theta(59*PI -t)*theta(t - 55*PI) + (-18.0/31*sin(39.0/25 - 4*t) - 379.0/95*sin(58.0/37 - 3*t) - 505.0/34*sin(102.0/65 -t) + 907.0/38*sin(2*t + 85.0/54) - 2243.0/5)*theta(55*PI -t)*theta(t - 51*PI) + (-16.0/7*sin(49.0/32 - 4*t) - 237.0/35*sin(102.0/65 - 2*t) - 1292.0/21*sin(36.0/23 -t) + 157.0/34*sin(3*t + 59.0/37) - 14814.0/35)*theta(51*PI -t)*theta(t - 47*PI) + (-107.0/46*sin(7.0/6 - 16*t) - 296.0/127*sin(25.0/16 - 10*t) - 31.0/7*sin(34.0/27 - 9*t) - 153.0/58*sin(41.0/39 - 6*t) + 122.0/45*sin(t + 25.0/8) + 891.0/40*sin(2*t + 320.0/71) + 973.0/59*sin(3*t + 177.0/40) + 904.0/181*sin(4*t + 51.0/23) + 79.0/40*sin(5*t + 49.0/25) + 173.0/37*sin(7*t + 27.0/28) + 429.0/101*sin(8*t + 10.0/11) + 29.0/21*sin(11*t + 89.0/39) + 51.0/32*sin(12*t + 19.0/5) + 30.0/31*sin(13*t + 125.0/33) + 109.0/35*sin(14*t + 55.0/37) + 65.0/34*sin(15*t + 43.0/40) + 22.0/27*sin(17*t + 21.0/37) + 11.0/32*sin(18*t + 61.0/40) + 51.0/23*sin(19*t + 118.0/27) - 17641.0/37)*theta(47*PI -t)*theta(t - 43*PI) + (-145.0/24*sin(64.0/41 - 10*t) - 178.0/31*sin(81.0/52 - 7*t) - 45.0/31*sin(69.0/44 - 6*t) - 448.0/31*sin(25.0/16 - 4*t) - 381.0/29*sin(47.0/30 - 3*t) - 4867.0/29*sin(91.0/58 -t) + 575.0/18*sin(2*t + 41.0/26) + 166.0/19*sin(5*t + 49.0/31) + 1.0/24*sin(8*t + 5.0/2) + 125.0/38*sin(9*t + 19.0/12) - 9733.0/39)*theta(43*PI -t)*theta(t - 39*PI) + (2777.0/30*sin(t + 58.0/37) + 419.0/38*sin(2*t + 53.0/34) + 101.0/33*sin(3*t + 303.0/65) + 55.0/9*sin(4*t + 89.0/19) + 156.0/25*sin(5*t + 11.0/7) - 6100.0/33)*theta(39*PI -t)*theta(t - 35*PI) + (-460.0/33*sin(38.0/25 - 3*t) - 1203.0/19*sin(81.0/52 - 2*t) - 1077.0/40*sin(14.0/9 -t) + 19.0/12*sin(4*t + 34.0/27) - 1300.0/83)*theta(35*PI -t)*theta(t - 31*PI) + (-11.0/23*sin(2.0/29 - 7*t) + 871.0/27*sin(t + 35.0/26) + 2939.0/39*sin(2*t + 35.0/29) + 257.0/23*sin(3*t + 186.0/43) + 519.0/61*sin(4*t + 155.0/42) + 51.0/11*sin(5*t + 160.0/39) + 2081.0/160*sin(6*t + 87.0/25) + 59.0/29*sin(8*t + 91.0/27) + 118.0/19*sin(9*t + 95.0/33) + 39.0/23*sin(10*t + 43.0/14) + 1718.0/21)*theta(31*PI -t)*theta(t - 27*PI) + (-62.0/11*sin(47.0/33 - 8*t) - 107.0/37*sin(10.0/33 - 6*t) + 9478.0/29*sin(t + 49.0/29) + 1853.0/39*sin(2*t + 50.0/11) + 1365.0/32*sin(3*t + 36.0/23) + 663.0/38*sin(4*t + 35.0/12) + 425.0/49*sin(5*t + 27.0/13) + 137.0/27*sin(7*t + 55.0/24) + 308.0/47*sin(9*t + 88.0/47) + 97.0/25*sin(10*t + 431.0/108) + 207.0/47*sin(11*t + 5.0/24) + 37.0/29*sin(12*t + 155.0/77) + 103.0/26*sin(13*t + 277.0/77) + 6913.0/39)*theta(27*PI -t)*theta(t - 23*PI) + (-57.0/85*sin(23.0/93 - 35*t) - 39.0/43*sin(41.0/34 - 34*t) - 23.0/15*sin(10.0/9 - 28*t) - 58.0/21*sin(57.0/86 - 23*t) - 11.0/36*sin(17.0/27 - 22*t) - 179.0/43*sin(74.0/75 - 17*t) - 113.0/23*sin(42.0/29 - 13*t) - 690.0/29*sin(39.0/58 - 6*t) - 863.0/15*sin(36.0/31 - 5*t) + 1409.0/40*sin(t + 53.0/30) + 895.0/24*sin(2*t + 73.0/16) + 452.0/19*sin(3*t + 39.0/25) + 1330.0/39*sin(4*t + 40.0/31) + 521.0/46*sin(7*t + 7.0/15) + 268.0/31*sin(8*t + 14.0/9) + 109.0/29*sin(9*t + 161.0/47) + 143.0/31*sin(10*t + 39.0/11) + 81.0/17*sin(11*t + 161.0/36) + 133.0/50*sin(12*t + 14.0/3) + 197.0/31*sin(14*t + 31.0/15) + 60.0/43*sin(15*t + 49.0/16) + 51.0/37*sin(16*t + 32.0/7) + 19.0/13*sin(18*t + 2.0/13) + 37.0/49*sin(19*t + 33.0/35) + 17.0/18*sin(20*t + 90.0/31) + 23.0/28*sin(21*t + 133.0/36) + 30.0/17*sin(24*t + 1.0/55) + 46.0/35*sin(25*t + 42.0/31) + 41.0/28*sin(26*t + 50.0/23) + 32.0/39*sin(27*t + 35.0/11) + 27.0/32*sin(29*t + 10.0/29) + 39.0/34*sin(30*t + 19.0/47) + 64.0/63*sin(31*t + 41.0/23) + 106.0/105*sin(32*t + 48.0/19) + 46.0/41*sin(33*t + 32.0/11) + 5.0/7*sin(36*t + 17.0/41) + 275.0/183*sin(37*t + 65.0/31) + 63.0/94*sin(38*t + 98.0/29) - 1334.0/15)*theta(23*PI -t)*theta(t - 19*PI) + (-34.0/135*sin(43.0/37 - 26*t) - 75.0/74*sin(10.0/7 - 22*t) - 31.0/19*sin(62.0/41 - 21*t) - 10.0/17*sin(28.0/19 - 20*t) - 19.0/17*sin(75.0/52 - 19*t) - 28.0/45*sin(25.0/26 - 18*t) - 85.0/28*sin(49.0/32 - 14*t) - 97.0/28*sin(151.0/101 - 8*t) - 719.0/68*sin(35.0/23 - 6*t) - 2603.0/89*sin(58.0/37 - 5*t) - 899.0/18*sin(36.0/23 - 4*t) - 30.0/7*sin(49.0/34 - 3*t) - 376.0/19*sin(25.0/16 - 2*t) + 4867.0/78*sin(t + 36.0/23) + 91.0/27*sin(7*t + 31.0/22) + 371.0/36*sin(9*t + 103.0/22) + 10.0/21*sin(10*t + 53.0/38) + 203.0/41*sin(11*t + 56.0/37) + 82.0/27*sin(12*t + 75.0/16) + 137.0/32*sin(13*t + 80.0/17) + 41.0/11*sin(15*t + 178.0/119) + 7.0/13*sin(16*t + 105.0/23) + 27.0/11*sin(17*t + 131.0/28) + 3.0/29*sin(23*t + 18.0/13) + 13.0/21*sin(24*t + 187.0/42) + 53.0/41*sin(25*t + 62.0/43) + 7805.0/13)*theta(19*PI -t)*theta(t - 15*PI) + (-88.0/47*sin(49.0/37 - 10*t) - 540.0/77*sin(48.0/31 - 8*t) - 1103.0/17*sin(58.0/37 - 2*t) - 1093.0/12*sin(11.0/7 -t) + 482.0/41*sin(3*t + 31.0/20) + 160.0/9*sin(4*t + 108.0/23) + 1430.0/37*sin(5*t + 91.0/58) + 205.0/51*sin(6*t + 60.0/13) + 263.0/15*sin(7*t + 11.0/7) + 17.0/5*sin(9*t + 135.0/29) + 106.0/29*sin(11*t + 83.0/18) + 218.0/145*sin(12*t + 87.0/61) + 2009.0/19)*theta(15*PI -t)*theta(t - 11*PI) + (-3.0/20*sin(13.0/9 - 70*t) - 22.0/35*sin(3.0/4 - 69*t) - 5.0/8*sin(55.0/38 - 61*t) - 13.0/16*sin(11.0/29 - 58*t) - 5.0/4*sin(239.0/159 - 57*t) - 37.0/34*sin(15.0/17 - 52*t) - 17.0/30*sin(36.0/43 - 47*t) - 43.0/25*sin(4.0/25 - 45*t) - 80.0/53*sin(4.0/13 - 42*t) - 250.0/91*sin(19.0/30 - 40*t) - 65.0/21*sin(23.0/27 - 35*t) - 137.0/43*sin(22.0/23 - 33*t) - 97.0/57*sin(5.0/23 - 32*t) - 87.0/37*sin(41.0/34 - 30*t) - 81.0/71*sin(35.0/27 - 29*t) - 172.0/51*sin(11.0/25 - 28*t) - 29.0/37*sin(16.0/45 - 26*t) - 123.0/23*sin(17.0/25 - 25*t) - 149.0/87*sin(29.0/45 - 24*t) - 145.0/34*sin(5.0/36 - 21*t) - 65.0/14*sin(38.0/29 - 10*t) + 287.0/3*sin(t + 129.0/29) + 2225.0/11*sin(2*t + 328.0/73) + 2543.0/33*sin(3*t + 43.0/32) + 5221.0/90*sin(4*t + 84.0/85) + 2263.0/72*sin(5*t + 96.0/23) + 1235.0/37*sin(6*t + 117.0/31) + 149.0/7*sin(7*t + 102.0/35) + 1112.0/47*sin(8*t + 103.0/30) + 114.0/11*sin(9*t + 97.0/34) + 364.0/37*sin(11*t + 16.0/15) + 163.0/22*sin(12*t + 38.0/15) + 317.0/27*sin(13*t + 74.0/33) + 491.0/34*sin(14*t + 83.0/35) + 182.0/51*sin(15*t + 208.0/47) + 116.0/7*sin(16*t + 6.0/29) + 129.0/19*sin(17*t + 157.0/39) + 179.0/31*sin(18*t + 37.0/23) + 69.0/11*sin(19*t + 7.0/30) + 102.0/31*sin(20*t + 51.0/35) + 185.0/57*sin(22*t + 1.0/54) + 22.0/17*sin(23*t + 78.0/31) + 187.0/31*sin(27*t + 11.0/49) + 30.0/11*sin(31*t + 53.0/17) + 30.0/19*sin(34*t + 15.0/4) + 41.0/12*sin(36*t + 63.0/31) + 66.0/65*sin(37*t + 92.0/49) + 11.0/6*sin(38*t + 31.0/35) + 70.0/29*sin(39*t + 61.0/24) + 38.0/21*sin(41*t + 77.0/27) + 61.0/36*sin(43*t + 24.0/23) + 1.0/3*sin(44*t + 77.0/31) + 46.0/45*sin(46*t + 37.0/18) + 223.0/71*sin(48*t + 137.0/48) + 2.0/3*sin(49*t + 23.0/13) + 59.0/53*sin(50*t + 40.0/9) + 56.0/29*sin(51*t + 7.0/10) + 107.0/57*sin(53*t + 17.0/9) + 21.0/38*sin(54*t + 187.0/94) + 13.0/44*sin(55*t + 3.0/4) + 25.0/24*sin(56*t + 203.0/204) + 16.0/7*sin(59*t + 96.0/23) + 17.0/25*sin(60*t + 24.0/43) + 3.0/13*sin(62*t + 2.0/19) + 3.0/19*sin(63*t + 157.0/42) + 27.0/20*sin(64*t + 81.0/22) + 19.0/18*sin(65*t + 71.0/21) + 11.0/30*sin(66*t + 79.0/23) + 4.0/5*sin(67*t + 127.0/32) + 13.0/23*sin(68*t + 6.0/17) + 6447.0/32)*theta(11*PI -t)*theta(t - 7*PI) + (-2.0/33*sin(23.0/20 - 82*t) - 4.0/27*sin(23.0/70 - 76*t) - 15.0/41*sin(21.0/37 - 54*t) - 7.0/38*sin(171.0/128 - 52*t) - 42.0/29*sin(73.0/47 - 16*t) + 2685.0/17*sin(t + 87.0/56) + 4785.0/46*sin(2*t + 41.0/27) + 2103.0/26*sin(3*t + 14.0/3) + 1135.0/42*sin(4*t + 48.0/35) + 3323.0/28*sin(5*t + 98.0/65) + 11545.0/129*sin(6*t + 369.0/79) + 995.0/14*sin(7*t + 71.0/47) + 185.0/26*sin(8*t + 58.0/59) + 662.0/25*sin(9*t + 79.0/18) + 872.0/27*sin(10*t + 119.0/26) + 527.0/66*sin(11*t + 193.0/48) + 541.0/27*sin(12*t + 115.0/26) + 745.0/41*sin(13*t + 108.0/25) + 605.0/29*sin(14*t + 156.0/35) + 73.0/19*sin(15*t + 95.0/26) + 55.0/14*sin(17*t + 71.0/43) + 193.0/25*sin(18*t + 41.0/9) + 122.0/11*sin(19*t + 103.0/77) + 81.0/58*sin(20*t + 22.0/19) + 154.0/23*sin(21*t + 69.0/16) + 403.0/56*sin(22*t + 107.0/25) + 335.0/62*sin(23*t + 41.0/10) + 141.0/35*sin(24*t + 79.0/20) + 58.0/31*sin(25*t + 49.0/15) + 141.0/23*sin(26*t + 83.0/20) + 52.0/31*sin(27*t + 16.0/7) + 37.0/43*sin(28*t + 98.0/97) + 54.0/31*sin(29*t + 91.0/24) + 172.0/23*sin(30*t + 82.0/19) + 45.0/17*sin(31*t + 73.0/51) + 10.0/21*sin(32*t + 32.0/19) + 124.0/37*sin(33*t + 134.0/35) + 47.0/27*sin(34*t + 51.0/13) + 83.0/44*sin(35*t + 17.0/5) + 94.0/35*sin(36*t + 59.0/15) + 15.0/19*sin(37*t + 114.0/49) + 47.0/33*sin(38*t + 58.0/13) + 27.0/32*sin(39*t + 108.0/59) + 44.0/23*sin(40*t + 17.0/37) + 114.0/65*sin(41*t + 4.0/5) + 53.0/21*sin(42*t + 130.0/29) + 21.0/16*sin(43*t + 29.0/35) + 71.0/29*sin(44*t + 14.0/19) + 11.0/20*sin(45*t + 116.0/31) + 8.0/17*sin(46*t + 89.0/23) + 23.0/28*sin(47*t + 51.0/35) + 40.0/43*sin(48*t + 108.0/29) + 67.0/52*sin(49*t + 147.0/40) + 61.0/49*sin(50*t + 183.0/43) + 22.0/35*sin(51*t + 42.0/23) + 27.0/19*sin(53*t + 88.0/89) + 17.0/39*sin(55*t + 73.0/24) + 7.0/38*sin(56*t + 119.0/31) + 19.0/23*sin(57*t + 173.0/48) + 179.0/134*sin(58*t + 63.0/17) + 13.0/19*sin(59*t + 235.0/118) + 6.0/7*sin(60*t + 29.0/31) + 11.0/16*sin(61*t + 53.0/19) + 43.0/36*sin(62*t + 59.0/15) + 33.0/47*sin(63*t + 21.0/22) + 32.0/97*sin(64*t + 454.0/101) + 11.0/39*sin(65*t + 61.0/19) + 15.0/19*sin(66*t + 11.0/40) + 9.0/25*sin(67*t + 39.0/29) + 24.0/29*sin(68*t + 131.0/41) + 17.0/25*sin(69*t + 96.0/31) + 11.0/16*sin(70*t + 111.0/35) + 16.0/17*sin(71*t + 75.0/28) + 9.0/17*sin(72*t + 43.0/29) + 25.0/34*sin(73*t + 79.0/39) + 41.0/34*sin(74*t + 65.0/19) + 16.0/29*sin(75*t + 33.0/26) + 18.0/19*sin(77*t + 263.0/79) + 1.0/7*sin(78*t + 98.0/23) + 3.0/4*sin(79*t + 19.0/33) + 10.0/37*sin(80*t + 59.0/35) + 11.0/37*sin(81*t + 32.0/13) + 11.0/26*sin(83*t + 133.0/47) + 7.0/22*sin(84*t + 110.0/29) + 3473.0/16)*theta(7*PI -t)*theta(t - 3*PI) + (-9.0/26*sin(38.0/45 - 192*t) - 15.0/32*sin(3.0/22 - 189*t) - 7.0/10*sin(15.0/34 - 185*t) - 3.0/34*sin(9.0/29 - 184*t) - 27.0/40*sin(5.0/23 - 182*t) - 6.0/5*sin(5.0/29 - 181*t) - 19.0/26*sin(1.0/17 - 178*t) - 53.0/59*sin(1.0/29 - 177*t) - 11.0/25*sin(11.0/56 - 176*t) - 33.0/67*sin(3.0/4 - 175*t) - 5.0/7*sin(6.0/31 - 174*t) - 28.0/57*sin(57.0/41 - 171*t) - 17.0/21*sin(5.0/16 - 170*t) - 13.0/23*sin(22.0/27 - 169*t) - 29.0/43*sin(61.0/41 - 167*t) - 34.0/67*sin(11.0/20 - 166*t) - 54.0/43*sin(34.0/29 - 163*t) - 62.0/63*sin(23.0/26 - 162*t) - 55.0/109*sin(359.0/360 - 159*t) - 40.0/39*sin(27.0/20 - 156*t) - 11.0/10*sin(65.0/64 - 155*t) - 37.0/53*sin(38.0/39 - 154*t) - 34.0/39*sin(34.0/31 - 147*t) - 7.0/11*sin(99.0/85 - 146*t) - 11.0/31*sin(32.0/25 - 141*t) - 15.0/16*sin(23.0/20 - 137*t) - 28.0/33*sin(31.0/20 - 129*t) - 85.0/66*sin(14.0/9 - 125*t) - 8.0/11*sin(21.0/26 - 119*t) - 26.0/21*sin(29.0/24 - 111*t) - 77.0/47*sin(1.0/87 - 110*t) - 61.0/32*sin(26.0/23 - 107*t) - 22.0/21*sin(52.0/37 - 103*t) - 76.0/35*sin(17.0/26 - 102*t) - 35.0/41*sin(6.0/7 - 100*t) - 9.0/8*sin(54.0/35 - 92*t) - 19.0/37*sin(26.0/27 - 91*t) - 109.0/38*sin(121.0/81 - 83*t) - 18.0/5*sin(48.0/31 - 75*t) - 117.0/25*sin(26.0/33 - 74*t) - 47.0/15*sin(3.0/13 - 71*t) - 277.0/69*sin(46.0/35 - 68*t) - 208.0/35*sin(35.0/23 - 67*t) - 33.0/28*sin(14.0/11 - 65*t) - 31.0/28*sin(8.0/33 - 61*t) - 49.0/31*sin(18.0/17 - 59*t) - 70.0/29*sin(35.0/29 - 58*t) - 461.0/64*sin(29.0/24 - 55*t) - 89.0/20*sin(13.0/46 - 51*t) - 553.0/88*sin(48.0/35 - 46*t) - 147.0/40*sin(3.0/46 - 43*t) - 963.0/241*sin(28.0/25 - 42*t) - 81.0/11*sin(21.0/31 - 40*t) - 813.0/65*sin(1 - 37*t) - 911.0/32*sin(29.0/42 - 33*t) - 297.0/20*sin(43.0/36 - 31*t) - 481.0/38*sin(14.0/17 - 29*t) - 263.0/12*sin(7.0/50 - 28*t) - 2478.0/83*sin(13.0/28 - 27*t) - 794.0/69*sin(35.0/38 - 26*t) - 239.0/42*sin(53.0/35 - 21*t) - 1319.0/61*sin(10.0/17 - 20*t) - 1289.0/50*sin(37.0/32 - 19*t) - 1394.0/69*sin(29.0/32 - 17*t) - 1763.0/27*sin(25.0/34 - 16*t) - 3412.0/33*sin(41.0/34 - 15*t) - 2214.0/23*sin(66.0/47 - 12*t) - 4273.0/28*sin(45.0/31 - 7*t) - 1009.0/38*sin(11.0/15 - 6*t) - 593.0/17*sin(20.0/13 - 2*t) + 1253.0/27*sin(t + 62.0/41) + 2284.0/37*sin(3*t + 62.0/37) + 765.0/23*sin(4*t + 239.0/120) + 2867.0/64*sin(5*t + 27.0/16) + 3107.0/29*sin(8*t + 31.0/18) + 3314.0/55*sin(9*t + 49.0/25) + 1439.0/36*sin(10*t + 131.0/29) + 2189.0/30*sin(11*t + 34.0/23) + 94.0/7*sin(13*t + 325.0/162) + 1839.0/29*sin(14*t + 46.0/27) + 1014.0/47*sin(18*t + 17.0/9) + 460.0/13*sin(22*t + 106.0/49) + 2713.0/113*sin(23*t + 71.0/24) + 1478.0/53*sin(24*t + 76.0/27) + 1066.0/33*sin(25*t + 39.0/17) + 275.0/31*sin(30*t + 55.0/41) + 506.0/25*sin(32*t + 23.0/35) + 439.0/26*sin(34*t + 89.0/134) + 293.0/30*sin(35*t + 80.0/17) + 373.0/35*sin(36*t + 34.0/23) + 1013.0/80*sin(38*t + 33.0/49) + 528.0/49*sin(39*t + 1.0/24) + 139.0/18*sin(41*t + 28.0/17) + 67.0/16*sin(44*t + 158.0/49) + 89.0/24*sin(45*t + 54.0/23) + 116.0/15*sin(47*t + 39.0/32) + 260.0/41*sin(48*t + 500.0/111) + 163.0/36*sin(49*t + 143.0/51) + 46.0/29*sin(50*t + 158.0/51) + 48.0/41*sin(52*t + 41.0/11) + 38.0/5*sin(53*t + 82.0/23) + 145.0/62*sin(54*t + 48.0/17) + 145.0/41*sin(56*t + 76.0/29) + 289.0/49*sin(57*t + 145.0/39) + 64.0/15*sin(60*t + 122.0/73) + 52.0/25*sin(62*t + 34.0/37) + 53.0/16*sin(63*t + 7.0/4) + 99.0/41*sin(64*t + 8.0/19) + 119.0/39*sin(66*t + 76.0/23) + 94.0/31*sin(69*t + 112.0/43) + 133.0/23*sin(70*t + 73.0/50) + 260.0/87*sin(72*t + 41.0/15) + 54.0/7*sin(73*t + 167.0/36) + 257.0/86*sin(76*t + 74.0/25) + 91.0/29*sin(77*t + 34.0/25) + 80.0/21*sin(78*t + 17.0/14) + 137.0/27*sin(79*t + 13.0/6) + 46.0/25*sin(80*t + 71.0/19) + 30.0/19*sin(81*t + 7.0/24) + 26.0/23*sin(82*t + 9.0/23) + 33.0/26*sin(84*t + 63.0/26) + 31.0/25*sin(85*t + 197.0/99) + 39.0/10*sin(86*t + 59.0/31) + 152.0/49*sin(87*t + 112.0/47) + 57.0/25*sin(88*t + 128.0/51) + 55.0/29*sin(89*t + 29.0/13) + 13.0/16*sin(90*t + 9.0/10) + 3.0/8*sin(93*t + 47.0/36) + 69.0/31*sin(94*t + 123.0/62) + 41.0/31*sin(95*t + 85.0/23) + 20.0/19*sin(96*t + 37.0/13) + 53.0/39*sin(97*t + 30.0/43) + 31.0/46*sin(98*t + 345.0/74) + 73.0/47*sin(99*t + 75.0/26) + 93.0/41*sin(101*t + 17.0/38) + 55.0/54*sin(104*t + 71.0/42) + 1.0/20*sin(105*t + 113.0/45) + 36.0/41*sin(106*t + 72.0/31) + 27.0/43*sin(108*t + 28.0/19) + 31.0/36*sin(109*t + 29.0/18) + 62.0/53*sin(112*t + 73.0/28) + 23.0/37*sin(113*t + 178.0/59) + 11.0/21*sin(114*t + 19.0/10) + 74.0/45*sin(115*t + 143.0/32) + 10.0/19*sin(116*t + 27.0/17) + 13.0/17*sin(117*t + 99.0/40) + 27.0/26*sin(118*t + 105.0/29) + 216.0/83*sin(120*t + 27.0/40) + 10.0/31*sin(121*t + 46.0/37) + 24.0/11*sin(122*t + 171.0/46) + 91.0/38*sin(123*t + 105.0/26) + 32.0/29*sin(124*t + 161.0/80) + 7.0/12*sin(126*t + 94.0/29) + 5.0/9*sin(127*t + 28.0/25) + 23.0/39*sin(128*t + 29.0/20) + 23.0/21*sin(130*t + 57.0/13) + 11.0/7*sin(131*t + 59.0/32) + 75.0/38*sin(132*t + 125.0/28) + 33.0/46*sin(133*t + 71.0/16) + 15.0/53*sin(134*t + 119.0/27) + 7.0/25*sin(135*t + 21.0/17) + 45.0/41*sin(136*t + 74.0/21) + 19.0/27*sin(138*t + 12.0/19) + 39.0/58*sin(139*t + 71.0/23) + 2.0/15*sin(140*t + 122.0/41) + 32.0/21*sin(142*t + 33.0/26) + 15.0/44*sin(143*t + 67.0/20) + 7.0/31*sin(144*t + 55.0/38) + 44.0/25*sin(145*t + 78.0/17) + 4.0/11*sin(148*t + 135.0/37) + 4.0/17*sin(149*t + 29.0/9) + 21.0/52*sin(150*t + 53.0/33) + 9.0/19*sin(151*t + 19.0/31) + 29.0/26*sin(152*t + 131.0/29) + 29.0/37*sin(153*t + 48.0/25) + 9.0/28*sin(157*t + 5.0/12) + 43.0/49*sin(158*t + 137.0/53) + 13.0/46*sin(160*t + 35.0/22) + 4.0/35*sin(161*t + 80.0/47) + 68.0/69*sin(164*t + 89.0/48) + 3.0/16*sin(165*t + 53.0/17) + 13.0/24*sin(168*t + 14.0/23) + 41.0/44*sin(172*t + 73.0/29) + 1.0/11*sin(173*t + 180.0/53) + 11.0/40*sin(179*t + 121.0/26) + 13.0/42*sin(180*t + 91.0/50) + 12.0/29*sin(183*t + 52.0/25) + 21.0/73*sin(186*t + 36.0/11) + 13.0/20*sin(187*t + 22.0/9) + 36.0/71*sin(188*t + 374.0/83) + 3.0/29*sin(190*t + 43.0/18) + 21.0/31*sin(191*t + 35.0/12) + 86.0/87*sin(193*t + 6.0/25) + 19.0/40*sin(194*t + 118.0/71) + 9.0/35*sin(195*t + 395.0/94) + 9.0/31*sin(196*t + 2.0/29) + 4.0/31*sin(197*t + 61.0/21) + 2.0/27*sin(198*t + 13.0/4) + 13.0/35*sin(199*t + 5.0/46) + 13.0/25*sin(200*t + 49.0/39) - 4805.0/18)*theta(3*PI -t)*theta(t +PI))*theta(sqrt(sgn(sin(t/2))));
}

float y(float t)
{
  return ((-9.0/22*sin(29.0/19 - 5*t) - 1.0/15*sin(31.0/26 - 4*t) - 16.0/23*sin(62.0/41 - 3*t) - 11.0/29*sin(29.0/20 - 2*t) - 127.0/25*sin(61.0/39 -t) + 9635.0/14)*theta(63*PI -t)*theta(t - 59*PI) + (-2.0/41*sin(46.0/31 - 12*t) - 17.0/69*sin(57.0/37 - 11*t) - 1.0/19*sin(10.0/7 - 10*t) - 13.0/31*sin(69.0/44 - 9*t) - 25.0/32*sin(80.0/51 - 7*t) - 59.0/40*sin(36.0/23 - 5*t) - 1.0/55*sin(1.0/25 - 4*t) - 143.0/37*sin(36.0/23 - 3*t) - 2.0/17*sin(93.0/65 - 2*t) - 1299.0/37*sin(69.0/44 -t) + 2.0/35*sin(6*t + 101.0/72) + 1.0/73*sin(8*t + 326.0/327) - 10150.0/39)*theta(59*PI -t)*theta(t - 55*PI) + (-89.0/18*sin(47.0/30 - 3*t) - 253.0/27*sin(47.0/30 - 2*t) - 3199.0/62*sin(80.0/51 -t) + 17.0/30*sin(4*t + 146.0/31) + 2687.0/5)*theta(55*PI -t)*theta(t - 51*PI) + (-13.0/30*sin(73.0/49 - 3*t) - 101.0/15*sin(14.0/9 -t) + 1073.0/27*sin(2*t + 30.0/19) + 140.0/23*sin(4*t + 30.0/19) - 4181.0/12)*theta(51*PI -t)*theta(t - 47*PI) + (-17.0/26*sin(27.0/32 - 17*t) - 26.0/37*sin(17.0/21 - 16*t) + 1187.0/9*sin(t + 136.0/29) + 337.0/26*sin(2*t + 64.0/33) + 155.0/17*sin(3*t + 181.0/45) + 287.0/51*sin(4*t + 101.0/31) + 57.0/13*sin(5*t + 164.0/57) + 291.0/58*sin(6*t + 78.0/37) + 86.0/27*sin(7*t + 321.0/74) + 537.0/269*sin(8*t + 31.0/18) + 120.0/239*sin(9*t + 41.0/26) + 20.0/21*sin(10*t + 137.0/31) + 15.0/44*sin(11*t + 91.0/29) + 34.0/19*sin(12*t + 9.0/5) + 17.0/19*sin(13*t + 101.0/23) + 30.0/37*sin(14*t + 59.0/39) + 29.0/39*sin(15*t + 38.0/39) + 28.0/65*sin(18*t + 31.0/30) + 24.0/25*sin(19*t + 221.0/48) + 9361.0/21)*theta(47*PI -t)*theta(t - 43*PI) + (-58.0/33*sin(69.0/44 - 7*t) - 137.0/28*sin(47.0/30 - 6*t) - 54.0/29*sin(91.0/58 - 5*t) - 475.0/39*sin(47.0/30 - 3*t) + 2759.0/39*sin(t + 245.0/52) + 109.0/3*sin(2*t + 245.0/52) + 10.0/7*sin(4*t + 14.0/9) + 33.0/26*sin(8*t + 36.0/23) + 67.0/38*sin(9*t + 179.0/38) + 10.0/23*sin(10*t + 37.0/22) - 16481.0/27)*theta(43*PI -t)*theta(t - 39*PI) + (1089.0/29*sin(t + 212.0/45) + 674.0/15*sin(2*t + 11.0/7) + 174.0/55*sin(3*t + 36.0/23) + 173.0/16*sin(4*t + 107.0/68) + 151.0/26*sin(5*t + 46.0/29) - 11521.0/34)*theta(39*PI -t)*theta(t - 35*PI) + (-29.0/10*sin(38.0/25 - 3*t) - 3554.0/27*sin(47.0/30 -t) + 383.0/23*sin(2*t + 61.0/39) + 36.0/13*sin(4*t + 35.0/23) - 11343.0/16)*theta(35*PI -t)*theta(t - 31*PI) + (-645.0/242*sin(1.0/15 - 9*t) - 309.0/19*sin(28.0/19 - 3*t) + 2509.0/16*sin(t + 50.0/11) + 348.0/35*sin(2*t + 40.0/19) + 457.0/43*sin(4*t + 58.0/25) + 351.0/14*sin(5*t + 128.0/31) + 211.0/26*sin(6*t + 17.0/12) + 58.0/13*sin(7*t + 68.0/15) + 271.0/34*sin(8*t + 92.0/31) + 125.0/26*sin(10*t + 82.0/27) - 9403.0/35)*theta(31*PI -t)*theta(t - 27*PI) + (-327.0/77*sin(13.0/45 - 9*t) - 1664.0/23*sin(42.0/29 -t) + 432.0/35*sin(2*t + 23.0/15) + 79.0/13*sin(3*t + 373.0/80) + 78.0/77*sin(4*t + 5.0/11) + 879.0/46*sin(5*t + 37.0/16) + 290.0/13*sin(6*t + 81.0/31) + 199.0/19*sin(7*t + 53.0/20) + 33.0/29*sin(8*t + 29.0/33) + 37.0/59*sin(10*t + 63.0/25) + 177.0/31*sin(11*t + 71.0/22) + 49.0/20*sin(12*t + 117.0/31) + 132.0/49*sin(13*t + 31.0/47) - 8453.0/38)*theta(27*PI -t)*theta(t - 23*PI) + (-1.0/26*sin(10.0/17 - 38*t) - 13.0/34*sin(16.0/25 - 35*t) - 11.0/18*sin(21.0/40 - 31*t) - 41.0/25*sin(29.0/37 - 13*t) - 350.0/43*sin(18.0/73 - 7*t) - 127.0/14*sin(40.0/67 - 6*t) - 307.0/26*sin(41.0/39 - 5*t) + 119.0/18*sin(t + 60.0/19) + 2993.0/37*sin(2*t + 64.0/37) + 555.0/16*sin(3*t + 105.0/23) + 302.0/11*sin(4*t + 46.0/27) + 142.0/23*sin(8*t + 3.0/10) + 99.0/17*sin(9*t + 27.0/50) + 89.0/16*sin(10*t + 1.0/3) + 28.0/5*sin(11*t + 23.0/37) + 196.0/47*sin(12*t + 28.0/45) + 32.0/15*sin(14*t + 135.0/31) + 103.0/37*sin(15*t + 34.0/13) + 99.0/100*sin(16*t + 103.0/34) + 73.0/52*sin(17*t + 157.0/105) + 61.0/26*sin(18*t + 14.0/11) + 81.0/32*sin(19*t + 28.0/17) + 18.0/23*sin(20*t + 55.0/13) + 17.0/12*sin(21*t + 161.0/47) + 25.0/28*sin(22*t + 37.0/11) + 1.0/5*sin(23*t + 169.0/46) + 17.0/35*sin(24*t + 3.0/11) + 10.0/17*sin(25*t + 23.0/14) + 23.0/36*sin(26*t + 96.0/37) + 31.0/40*sin(27*t + 155.0/41) + 15.0/22*sin(28*t + 104.0/23) + 11.0/40*sin(29*t + 1.0/4) + 25.0/39*sin(30*t + 11.0/14) + 6.0/17*sin(32*t + 83.0/26) + 2.0/3*sin(33*t + 115.0/29) + 11.0/19*sin(34*t + 69.0/16) + 3.0/5*sin(36*t + 131.0/130) + 14.0/29*sin(37*t + 17.0/19) + 13096.0/15)*theta(23*PI -t)*theta(t - 19*PI) + (-29.0/39*sin(70.0/47 - 25*t) - 5.0/34*sin(17.0/20 - 23*t) - 19.0/24*sin(94.0/67 - 17*t) - 7.0/41*sin(11.0/19 - 15*t) - 54.0/11*sin(39.0/25 - 13*t) - 1489.0/23*sin(36.0/23 - 3*t) + 7798.0/25*sin(t + 113.0/24) + 2814.0/55*sin(2*t + 20.0/13) + 334.0/23*sin(4*t + 14.0/3) + 23.0/28*sin(5*t + 1.0/174) + 1647.0/71*sin(6*t + 80.0/51) + 197.0/74*sin(7*t + 271.0/58) + 15.0/26*sin(8*t + 128.0/33) + 257.0/29*sin(9*t + 113.0/24) + 227.0/53*sin(10*t + 46.0/31) + 9.0/14*sin(11*t + 18.0/11) + 26.0/47*sin(12*t + 31.0/24) + 102.0/31*sin(14*t + 159.0/34) + 104.0/41*sin(16*t + 26.0/17) + 25.0/62*sin(18*t + 43.0/25) + 28.0/19*sin(19*t + 97.0/21) + 51.0/32*sin(20*t + 71.0/46) + 19.0/22*sin(21*t + 47.0/10) + 17.0/47*sin(22*t + 25.0/19) + 8.0/23*sin(24*t + 32.0/7) + 35.0/43*sin(26*t + 157.0/34) - 42639.0/86)*theta(19*PI -t)*theta(t - 15*PI) + (7542.0/29*sin(t + 113.0/24) + 19205.0/194*sin(2*t + 58.0/37) + 2120.0/27*sin(3*t + 91.0/58) + 2814.0/97*sin(4*t + 62.0/39) + 346.0/33*sin(5*t + 37.0/23) + 205.0/22*sin(6*t + 35.0/22) + 93.0/29*sin(7*t + 373.0/80) + 695.0/58*sin(8*t + 11.0/7) + 53.0/12*sin(9*t + 99.0/62) + 37.0/35*sin(10*t + 31.0/17) + 65.0/34*sin(11*t + 34.0/23) + 133.0/31*sin(12*t + 271.0/58) + 15055.0/59)*theta(15*PI -t)*theta(t - 11*PI) + (-12.0/35*sin(95.0/96 - 68*t) - 24.0/19*sin(23.0/24 - 67*t) - 37.0/24*sin(15.0/22 - 65*t) - 23.0/19*sin(79.0/59 - 64*t) - 27.0/41*sin(23.0/39 - 61*t) - 31.0/24*sin(14.0/9 - 59*t) - 35.0/29*sin(49.0/36 - 54*t) - 10.0/43*sin(23.0/29 - 53*t) - 46.0/25*sin(123.0/88 - 51*t) - 96.0/41*sin(14.0/27 - 49*t) - 102.0/31*sin(17.0/44 - 47*t) - 7.0/13*sin(17.0/21 - 46*t) - 37.0/26*sin(1.0/20 - 45*t) - 113.0/39*sin(18.0/17 - 36*t) - 71.0/25*sin(154.0/153 - 34*t) - 233.0/33*sin(53.0/59 - 31*t) - 29.0/17*sin(58.0/49 - 30*t) - 32.0/33*sin(45.0/31 - 28*t) - 547.0/137*sin(53.0/38 - 27*t) - 161.0/30*sin(19.0/30 - 22*t) - 598.0/57*sin(15.0/26 - 19*t) - 821.0/67*sin(59.0/41 - 18*t) - 199.0/28*sin(88.0/59 - 17*t) - 355.0/28*sin(14.0/23 - 13*t) + 8560.0/31*sin(t + 192.0/41) + 8995.0/27*sin(2*t + 33.0/25) + 3231.0/17*sin(3*t + 13.0/12) + 270.0/19*sin(4*t + 1.0/33) + 331.0/26*sin(5*t + 113.0/25) + 680.0/43*sin(6*t + 30.0/13) + 557.0/17*sin(7*t + 120.0/29) + 579.0/32*sin(8*t + 38.0/21) + 884.0/35*sin(9*t + 65.0/14) + 766.0/29*sin(10*t + 63.0/47) + 475.0/22*sin(11*t + 214.0/55) + 337.0/43*sin(12*t + 62.0/25) + 100.0/21*sin(14*t + 23.0/26) + 69.0/10*sin(15*t + 59.0/16) + 83.0/10*sin(16*t + 76.0/35) + 1505.0/122*sin(20*t + 117.0/40) + 77.0/34*sin(21*t + 34.0/31) + 381.0/43*sin(23*t + 85.0/21) + 87.0/31*sin(24*t + 42.0/31) + 31.0/12*sin(25*t + 205.0/68) + 31.0/10*sin(26*t + 2.0/13) + 129.0/32*sin(29*t + 13.0/21) + 69.0/26*sin(32*t + 53.0/16) + 44.0/25*sin(33*t + 11.0/38) + 43.0/13*sin(35*t + 110.0/27) + 102.0/47*sin(37*t + 15.0/4) + 105.0/31*sin(38*t + 7.0/9) + 76.0/31*sin(39*t + 90.0/23) + 30.0/31*sin(40*t + 18.0/11) + 6.0/11*sin(41*t + 88.0/29) + 68.0/29*sin(42*t + 5.0/42) + 81.0/61*sin(43*t + 157.0/35) + 11.0/9*sin(44*t + 29.0/38) + 139.0/70*sin(48*t + 106.0/29) + 17.0/23*sin(50*t + 103.0/51) + 29.0/20*sin(52*t + 67.0/17) + 25.0/47*sin(55*t + 133.0/66) + 38.0/53*sin(56*t + 3.0/31) + 51.0/23*sin(57*t + 94.0/29) + 59.0/26*sin(58*t + 31.0/40) + 21.0/25*sin(60*t + 15.0/19) + 5.0/23*sin(62*t + 67.0/18) + 44.0/23*sin(63*t + 11.0/27) + 24.0/29*sin(66*t + 50.0/19) + 17.0/24*sin(69*t + 89.0/21) + 17.0/18*sin(70*t + 40.0/9) + 11297.0/30)*theta(11*PI -t)*theta(t - 7*PI) + (-7.0/26*sin(9.0/40 - 80*t) - 3.0/16*sin(37.0/52 - 73*t) - 50.0/99*sin(11.0/18 - 53*t) - 25.0/38*sin(43.0/85 - 51*t) - 5.0/27*sin(40.0/33 - 49*t) - 29.0/64*sin(7.0/30 - 44*t) - 31.0/44*sin(11.0/9 - 32*t) - 16.0/31*sin(23.0/22 - 30*t) - 32.0/29*sin(15.0/13 - 29*t) - 29.0/12*sin(44.0/41 - 12*t) - 190.0/27*sin(25.0/18 - 10*t) - 767.0/46*sin(62.0/43 - 5*t) + 30619.0/37*sin(t + 202.0/43) + 8071.0/38*sin(2*t + 145.0/31) + 107.0/29*sin(3*t + 6.0/55) + 75756.0/545*sin(4*t + 32.0/21) + 3911.0/46*sin(6*t + 98.0/65) + 89.0/19*sin(7*t + 8.0/21) + 2245.0/67*sin(8*t + 52.0/37) + 962.0/35*sin(9*t + 43.0/34) + 307.0/38*sin(11*t + 40.0/31) + 457.0/39*sin(13*t + 42.0/29) + 119.0/13*sin(14*t + 182.0/41) + 73.0/49*sin(15*t + 41.0/19) + 219.0/29*sin(16*t + 115.0/86) + 359.0/40*sin(17*t + 169.0/38) + 116.0/43*sin(18*t + 5.0/4) + 13.0/22*sin(19*t + 46.0/25) + 374.0/41*sin(20*t + 167.0/38) + 32.0/25*sin(21*t + 11.0/4) + 3.0/16*sin(22*t + 53.0/18) + 204.0/31*sin(23*t + 93.0/23) + 116.0/19*sin(24*t + 131.0/31) + 108.0/25*sin(25*t + 84.0/61) + 265.0/64*sin(26*t + 62.0/15) + 58.0/11*sin(27*t + 259.0/61) + 224.0/33*sin(28*t + 44.0/39) + 121.0/27*sin(31*t + 44.0/49) + 17.0/19*sin(33*t + 46.0/11) + 63.0/32*sin(34*t + 25.0/29) + 61.0/51*sin(35*t + 49.0/38) + 92.0/29*sin(36*t + 45.0/11) + 38.0/21*sin(37*t + 13.0/15) + 14.0/11*sin(38*t + 21.0/22) + 77.0/24*sin(39*t + 104.0/25) + 27.0/23*sin(40*t + 17.0/15) + 73.0/55*sin(41*t + 33.0/43) + 16.0/45*sin(42*t + 184.0/41) + 7.0/16*sin(43*t + 31.0/40) + 13.0/34*sin(45*t + 52.0/31) + 31.0/35*sin(46*t + 131.0/30) + 27.0/41*sin(47*t + 50.0/49) + 4.0/35*sin(48*t + 3.0/20) +sin(50*t + 19.0/31) + 16.0/25*sin(52*t + 12.0/37) + 23.0/20*sin(54*t + 8.0/35) + 59.0/71*sin(55*t + 13.0/33) + 13.0/16*sin(56*t + 137.0/33) + 10.0/11*sin(57*t + 34.0/41) + 3.0/20*sin(58*t + 4.0/41) + 37.0/35*sin(59*t + 156.0/43) + 9.0/26*sin(60*t + 91.0/37) + 4.0/31*sin(61*t + 34.0/19) + 14.0/17*sin(62*t + 101.0/32) + 4.0/9*sin(63*t + 95.0/26) + 10.0/11*sin(64*t + 29.0/40) + 56.0/113*sin(65*t + 36.0/11) + 13.0/21*sin(66*t + 221.0/59) + 33.0/41*sin(67*t + 19.0/27) + 3.0/5*sin(68*t + 164.0/45) + 15.0/31*sin(69*t + 113.0/40) + 10.0/19*sin(70*t + 14.0/31) + 1.0/16*sin(71*t + 283.0/71) + 8.0/17*sin(72*t + 131.0/40) + 13.0/48*sin(74*t + 29.0/52) + 15.0/28*sin(75*t + 15.0/4) + 7.0/13*sin(76*t + 2.0/7) + 20.0/31*sin(77*t + 6.0/19) + 19.0/34*sin(78*t + 226.0/59) + 1.0/8*sin(79*t + 148.0/43) + 3.0/19*sin(81*t + 76.0/33) + 8.0/21*sin(82*t + 73.0/24) + 5.0/34*sin(83*t + 3.0/29) + 36.0/107*sin(84*t + 35.0/33) + 5363.0/28)*theta(7*PI -t)*theta(t - 3*PI) + (-8.0/21*sin(59.0/53 - 192*t) - 17.0/32*sin(15.0/32 - 188*t) - 13.0/22*sin(11.0/36 - 181*t) - 41.0/34*sin(1.0/16 - 180*t) - 11.0/20*sin(23.0/41 - 179*t) - 2.0/15*sin(1 - 176*t) - 20.0/31*sin(4.0/27 - 175*t) - 17.0/29*sin(21.0/38 - 174*t) - 11.0/41*sin(1.0/20 - 173*t) - 22.0/51*sin(10.0/7 - 170*t) - 25.0/28*sin(7.0/16 - 169*t) - 4.0/13*sin(22.0/27 - 168*t) - 18.0/23*sin(17.0/26 - 162*t) - 108.0/59*sin(28.0/25 - 161*t) - 18.0/29*sin(46.0/47 - 156*t) - 26.0/33*sin(24.0/19 - 155*t) - 4.0/19*sin(55.0/36 - 151*t) - 32.0/65*sin(15.0/16 - 150*t) - 7.0/25*sin(6.0/47 - 147*t) - 8.0/73*sin(4.0/19 - 144*t) - 2.0/31*sin(3.0/19 - 137*t) - 11.0/21*sin(29.0/28 - 133*t) - 9.0/19*sin(31.0/32 - 125*t) - 13.0/9*sin(6.0/25 - 105*t) - 4.0/19*sin(19.0/25 - 103*t) - 68.0/53*sin(74.0/73 - 100*t) - 47.0/36*sin(22.0/21 - 98*t) - 67.0/50*sin(3.0/23 - 97*t) - 70.0/43*sin(26.0/37 - 93*t) - 79.0/46*sin(17.0/36 - 92*t) - 41.0/15*sin(17.0/20 - 91*t) - 37.0/19*sin(25.0/24 - 90*t) - 27.0/25*sin(41.0/44 - 88*t) - 47.0/27*sin(1.0/461 - 81*t) - 13.0/11*sin(27.0/25 - 75*t) - 65.0/18*sin(37.0/33 - 67*t) - 56.0/29*sin(6.0/19 - 63*t) - 40.0/17*sin(7.0/24 - 59*t) - 103.0/36*sin(17.0/23 - 56*t) - 194.0/43*sin(29.0/20 - 55*t) - 125.0/32*sin(11.0/20 - 53*t) - 107.0/28*sin(38.0/31 - 48*t) - 293.0/21*sin(11.0/19 - 42*t) - 523.0/47*sin(19.0/75 - 34*t) - 391.0/31*sin(8.0/17 - 33*t) - 171.0/22*sin(40.0/29 - 31*t) - 599.0/23*sin(19.0/15 - 25*t) - 612.0/59*sin(33.0/43 - 19*t) - 566.0/27*sin(1.0/33 - 18*t) - 1077.0/17*sin(39.0/34 - 17*t) - 469.0/23*sin(25.0/16 - 13*t) - 843.0/35*sin(43.0/39 - 11*t) - 3233.0/40*sin(25.0/19 - 10*t) - 1616.0/43*sin(17.0/13 - 8*t) - 20161.0/288*sin(27.0/20 - 7*t) - 585.0/16*sin(20.0/17 - 6*t) - 903.0/10*sin(74.0/53 - 5*t) - 589.0/12*sin(25.0/22 - 4*t) - 9071.0/35*sin(20.0/13 - 3*t) + 1786.0/51*sin(t + 173.0/41) + 42120.0/77*sin(2*t + 53.0/33) + 309.0/14*sin(9*t + 23.0/19) + 1057.0/33*sin(12*t + 59.0/35) + 361.0/26*sin(14*t + 158.0/73) + 923.0/33*sin(15*t + 76.0/35) + 408.0/25*sin(16*t + 29.0/18) + 108.0/13*sin(20*t + 108.0/25) + 88.0/3*sin(21*t + 39.0/17) + 1011.0/40*sin(22*t + 17.0/7) + 708.0/55*sin(23*t + 67.0/18) + 501.0/23*sin(24*t + 21.0/13) + 379.0/27*sin(26*t + 29.0/27) + 914.0/83*sin(27*t + 184.0/43) + 310.0/13*sin(28*t + 83.0/35) + 599.0/34*sin(29*t + 231.0/73) + 264.0/37*sin(30*t + 98.0/41) + 120.0/11*sin(32*t + 33.0/35) + 15.0/19*sin(35*t + 3) + 230.0/33*sin(36*t + 89.0/33) + 54.0/29*sin(37*t + 39.0/28) + 137.0/17*sin(38*t + 148.0/33) + 434.0/37*sin(39*t + 49.0/17) + 384.0/29*sin(40*t + 13.0/4) + 614.0/83*sin(41*t + 17.0/28) + 847.0/76*sin(43*t + 47.0/32) + 294.0/43*sin(44*t + 143.0/36) + 56.0/29*sin(45*t + 119.0/27) + 47.0/35*sin(46*t + 39.0/11) + 47.0/14*sin(47*t + 75.0/44) + 291.0/145*sin(49*t + 28.0/9) + 167.0/65*sin(50*t + 33.0/10) + 113.0/30*sin(51*t + 7.0/12) + 212.0/19*sin(52*t + 21.0/31) + 254.0/31*sin(54*t + 28.0/15) + 162.0/29*sin(57*t + 25.0/7) + 38.0/11*sin(58*t + 55.0/16) + 90.0/41*sin(60*t + 3.0/28) + 89.0/22*sin(61*t + 139.0/37) + 107.0/20*sin(62*t + 121.0/31) + 112.0/29*sin(64*t + 14.0/17) + 202.0/39*sin(65*t + 41.0/25) + 32.0/25*sin(66*t + 68.0/19) + 106.0/37*sin(68*t + 211.0/48) + 37.0/19*sin(69*t + 23.0/10) + 30.0/19*sin(70*t + 125.0/124) + 102.0/61*sin(71*t + 32.0/45) + 88.0/39*sin(72*t + 134.0/31) + 91.0/31*sin(73*t + 134.0/31) + 193.0/62*sin(74*t + 30.0/29) + 171.0/29*sin(76*t + 23.0/11) + 31.0/16*sin(77*t + 12.0/7) + 55.0/17*sin(78*t + 5.0/6) + 82.0/25*sin(79*t + 12.0/5) + 59.0/29*sin(80*t + 421.0/158) + 25.0/11*sin(82*t + 67.0/41) + 71.0/27*sin(83*t + 195.0/73) + 65.0/36*sin(84*t + 17.0/8) + 83.0/39*sin(85*t + 81.0/56) + 5.0/7*sin(86*t + 102.0/25) + 33.0/29*sin(87*t + 52.0/21) + 20.0/23*sin(89*t + 15.0/46) + 20.0/53*sin(94*t + 9.0/17) + 33.0/32*sin(95*t + 112.0/27) + 41.0/38*sin(96*t + 73.0/37) + 33.0/43*sin(99*t + 77.0/32) + 59.0/21*sin(101*t + 427.0/214) + 139.0/52*sin(102*t + 125.0/34) + 132.0/71*sin(104*t + 5.0/9) + 43.0/32*sin(106*t + 169.0/41) + 26.0/27*sin(107*t + 43.0/38) + 31.0/26*sin(108*t + 5.0/14) + 47.0/37*sin(109*t + 72.0/19) + 63.0/43*sin(110*t + 71.0/21) + 30.0/41*sin(111*t + 79.0/31) + 19.0/17*sin(112*t + 123.0/47) + 295.0/148*sin(113*t + 182.0/43) + 37.0/15*sin(114*t + 27.0/40) + 81.0/38*sin(115*t + 1.0/7) + 2.0/3*sin(116*t + 83.0/49) + 41.0/23*sin(117*t + 285.0/67) + 12.0/13*sin(118*t + 50.0/29) + 7.0/22*sin(119*t + 153.0/41) + 25.0/27*sin(120*t + 7.0/16) + 48.0/37*sin(121*t + 22.0/65) + 7.0/36*sin(122*t + 8.0/7) + 71.0/40*sin(123*t + 97.0/27) + 37.0/30*sin(124*t + 139.0/36) + 29.0/27*sin(126*t + 42.0/29) + 12.0/25*sin(127*t + 13.0/32) + 49.0/22*sin(128*t + 88.0/21) + 30.0/11*sin(129*t + 145.0/38) + 35.0/16*sin(130*t + 139.0/33) + 41.0/55*sin(131*t + 663.0/166) + 31.0/33*sin(132*t + 399.0/100) + 5.0/11*sin(134*t + 101.0/32) + 121.0/81*sin(135*t + 131.0/31) + 26.0/21*sin(136*t + 148.0/33) + 8.0/33*sin(138*t + 61.0/21) + 26.0/53*sin(139*t + 60.0/37) + 14.0/27*sin(140*t + 17.0/28) + 13.0/28*sin(141*t + 73.0/39) + 95.0/63*sin(142*t + 279.0/61) + 22.0/35*sin(143*t + 463.0/103) + 4.0/9*sin(145*t + 53.0/38) + 17.0/41*sin(146*t + 13.0/6) + 9.0/31*sin(148*t + 48.0/17) + 2.0/27*sin(149*t + 65.0/32) + 7.0/36*sin(152*t + 53.0/22) + 14.0/17*sin(153*t + 63.0/34) + 10.0/27*sin(154*t + 44.0/25) + 5.0/24*sin(157*t + 141.0/49) + 17.0/20*sin(158*t + 131.0/65) + 21.0/47*sin(159*t + 73.0/30) + 7.0/17*sin(160*t + 15.0/32) + 1.0/9*sin(163*t + 1027.0/257) + 35.0/27*sin(164*t + 33.0/16) + 35.0/43*sin(165*t + 37.0/12) + 23.0/54*sin(166*t + 26.0/11) + 4.0/29*sin(167*t + 99.0/74) + 45.0/37*sin(171*t + 7.0/3) + 8.0/13*sin(172*t + 89.0/29) + 16.0/25*sin(177*t + 134.0/45) + 9.0/19*sin(178*t + 67.0/31) + 17.0/28*sin(182*t + 55.0/28) + 13.0/22*sin(183*t + 161.0/40) + 23.0/35*sin(184*t + 73.0/21) + 19.0/27*sin(185*t + 91.0/31) + 8.0/27*sin(186*t + 10.0/61) + 83.0/84*sin(187*t + 6.0/19) + 9.0/29*sin(189*t + 85.0/37) + 33.0/29*sin(190*t + 205.0/56) + 18.0/43*sin(191*t + 55.0/21) + 30.0/37*sin(193*t + 12.0/19) + 11.0/30*sin(194*t + 15.0/41) + 8.0/21*sin(195*t + 20.0/19) + 14.0/39*sin(196*t + 365.0/96) + 7.0/24*sin(197*t + 163.0/40) + 5.0/23*sin(198*t + 19.0/35) + 2.0/9*sin(199*t + 25.0/22) + 5.0/8*sin(200*t + 47.0/46) - 43.0/28)*theta(3*PI -t)*theta(t +PI))*theta(sqrt(sgn(sin(t/2))));
}
